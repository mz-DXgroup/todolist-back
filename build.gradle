buildscript {
	ext {
		restdocsApiSpecVersion = '0.19.0'
	}
}
plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.0'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'com.epages.restdocs-api-spec' version "$restdocsApiSpecVersion"
	id 'org.asciidoctor.jvm.convert' version '3.3.2'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	asciidoctorExt
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.9.0'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
//	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	// swagger + restdocs
	testImplementation "com.epages:restdocs-api-spec-mockmvc:$restdocsApiSpecVersion"
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
	asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor'

	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'

	implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	testImplementation 'org.springframework.security:spring-security-test'

	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	implementation 'io.jsonwebtoken:jjwt-api:0.11.5', 'io.jsonwebtoken:jjwt-jackson:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
}

// asciidoctor 작업 구성
asciidoctor {
	dependsOn test
	configurations 'asciidoctorExt'
	baseDirFollowsSourceFile()
}

// rest docs
tasks.register('generateResDocs', Copy) {
	dependsOn asciidoctor

	delete file('src/main/resources/static/restdocs')
	from("$buildDir/docs/asciidoc")
	into('src/main/resources/static/restdocs')
}

openapi3 {
	servers = [
			{ server ->
				server.url = "http://localhost:8090"
				server.description = "로컬 서버"
			}
	]
	title = "My API"
	description = "My API description"
	version = "0.1.0"
	format = "yaml" // or json
}

tasks.register('generateOasToSwagger', Copy) {
	dependsOn("openapi3")
	from("$buildDir/api-spec/openapi3.yaml")
	into("src/main/resources/static/swagger")
}

tasks.named('test') {
	useJUnitPlatform()
}

def querydslDir = "src/main/generated"

sourceSets {
	main.java.srcDirs += [ querydslDir ]
}

tasks.withType(JavaCompile) {
	options.getGeneratedSourceOutputDirectory().set(file(querydslDir))
}

clean.doLast {
	file(querydslDir).deleteDir()
}

jar{
	enabled=false
}